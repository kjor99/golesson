package dao

import (
	"encoding/json"
	"fmt"

	"github.com/jinzhu/gorm"
	_ "github.com/jinzhu/gorm/dialects/mysql"
	"github.com/kjor99/golesson/readConf"
)

type AutoGenerated struct {
	Mysql Mysql `json:"Mysql,omitempty"`
}
type Mysql struct {
	Host     string `json:"host"`
	Port     string `json:"port"`
	User     string `json:"user"`
	Password string `json:"password"`
	Dbname   string `json:"dbname"`
}

var DB *gorm.DB

func Conn(url string) *gorm.DB {

	file := readConf.GetJsonConf(url)
	conf := AutoGenerated{}
	defer file.Close()
	json.NewDecoder(file).Decode(&conf)
	host := conf.Mysql.Host
	port := conf.Mysql.Port
	user := conf.Mysql.User
	password := conf.Mysql.Password
	dbname := conf.Mysql.Dbname
	fmt.Printf("conf: %v\n", &conf)
	dns := fmt.Sprintf("%s:%s@tcp(%s:%s)/%s?charset=utf8mb4&parseTime=True&loc=Local", user, password, host, port, dbname)
	//("%s:%s@tcp(%s:%s)/%s?charset=utf8&parseTime=True&loc=Local", user, password, host, port, dbname)
	fmt.Printf("dns: %v\n", dns)
	db, err := gorm.Open("mysql", dns)
	if err != nil {
		fmt.Printf("数据库操作err: %v\n", err)
		return nil
	}

	DB = db
	return DB

}
